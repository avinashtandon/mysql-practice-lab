-- Aggregation
-- Find the total quantity sold per product.
select p.name,
       sum(ti.quantity)
    from transaction_items ti
left join p1.products p on p.product_id = ti.product_id
group by p.name;

-- Calculate the total revenue generated by each customer.
select  c.name,
    sum(ti.quantity * ti.price)
    from transaction_items ti
left join p1.transactions t on t.trans_id = ti.trans_id
left join p1.customers c on t.customer_id = c.customer_id
group by c.name;

-- Joins Across Multiple Tables
-- List all transactions along with customer names and product names.

select t.trans_id,
       c.name,
       p.name,
       ti.quantity,
       ti.price
    from transactions t
left join p1.transaction_items ti on t.trans_id = ti.trans_id
        left join products p on ti.product_id = p.product_id
left join p1.customers c on t.customer_id = c.customer_id;

-- Find all products purchased by customers with 'Platinum' loyalty status.

  select p.name
      from transaction_items ti
  left join p1.transactions t on t.trans_id = ti.trans_id
          left join products p on ti.product_id = p.product_id
  left join p1.customers c on t.customer_id = c.customer_id
  where c.loyalty_status='Platinum';

-- Date Filtering
-- Find all transactions that occurred in the first 10 days of June 2024.
-- Calculate the total revenue generated on each day.
-- Pattern Discovery
-- Identify the top 3 most sold product categories.

-- Determine which loyalty status has the highest average spending per customer.

-- List all customers who have made more than one transaction.

-- Find all products that were never purchased.

-- Identify the most popular product sold each day.

-- Find customers who bought the same product in multiple separate transactions.